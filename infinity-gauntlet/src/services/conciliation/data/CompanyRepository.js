const CommonActions = require('./CommonActions')
const Company = require('application/core/models/company').default

/**
 * @type {module.CompanyRepository}
 */
module.exports = class CompanyRepository extends CommonActions {
  constructor() {
    super(Company)
  }

  /**
   * Get all merchants below parent by parent id
   * @param {string} parent_id
   * @return {Promise}
   */
  getAllMerchantsByParent(parent_id) {
    return this.find(
      {
        parent_id,
        primary: false,
        'company_metadata.is_loja_leo': true
      },
      { _id: 1, name: 1, document_number: 1 }
    )
  }

  /**
   * Fetch a list of companies haven't SAP system defined by Leo
   * @return {Promise<[{_id}]>}
   */
  getCompaniesWithoutSap() {
    /**
     * associates stores that haven't SAP system
     * Defined by Leo here: https://github.com/hashlab/financial-infrastructure/issues/4#issuecomment-568482728
     * @type {string[]}
     */
    const associatesDocumentNumbers = [
      '02264706000196',
      '10758730000100',
      '02046163000130',
      '02872217000117',
      '02492310000104',
      '02492310000600',
      '03074643000178',
      '17218706000127',
      '07667712000108',
      '07489474000198',
      '73668758000176',
      '07136890000102',
      '02341726000113',
      '14796880000169',
      '20978794000170',
      '31013517000149',
      '93923761000104',
      '71095897000122',
      '71095897000203',
      '71095897000637',
      '05118778000113',
      '85090793000130',
      '85090793000210',
      '04740760000358',
      '09675751000182',
      '16640671000157',
      '09675751000344',
      '56192602000142',
      '04790232000141',
      '03986613000138',
      '10925899000107',
      '16986057000141',
      '10500326000131',
      '06228417000192',
      '28726763000133',
      '07851409000160',
      '17991419000155',
      '10366850000161',
      '92780071000172',
      '15329241000156',
      '02461184000112',
      '03515523000169',
      '18294498000108',
      '26971392000120',
      '30331700000120',
      '00778833000188',
      '16826797000110',
      '31738945000210',
      '31738945000139',
      '01326290000120',
      '01326290000201',
      '18703077000193',
      '18703077000274',
      '18703077000355',
      '33331397000153',
      '05437235000169',
      '05437235000592',
      '19328221000111',
      '29250018000123'
    ]

    /**
     * partner stores that haven't SAP system
     * Defined by Leo here: https://github.com/hashlab/financial-infrastructure/issues/22
     * @type {string[]}
     */
    const partnersDocumentNumbers = [
      '02264706000196',
      '10758730000100',
      '02046163000130',
      '02872217000117',
      '02492310000104',
      '02492310000600',
      '03074643000178',
      '17218706000127',
      '07667712000108',
      '07489474000198',
      '73668758000176',
      '07136890000102',
      '02341726000113',
      '14796880000169',
      '20978794000170',
      '31013517000149',
      '93923761000104',
      '71095897000122',
      '71095897000203',
      '71095897000637',
      '05118778000113',
      '85090793000130',
      '85090793000210',
      '04740760000358',
      '09675751000182',
      '16640671000157',
      '09675751000344',
      '56192602000142',
      '04790232000141',
      '03986613000138',
      '10925899000107',
      '16986057000141',
      '10500326000131',
      '06228417000192',
      '28726763000133',
      '07851409000160',
      '17991419000155',
      '10366850000161',
      '92780071000172',
      '15329241000156',
      '02461184000112',
      '03515523000169',
      '18294498000108',
      '26971392000120',
      '30331700000120',
      '800242726',
      '800242726',
      '00778833000188',
      '16826797000110',
      '31738945000210',
      '31738945000139',
      '01326290000120',
      '01326290000201',
      '18703077000193',
      '18703077000274',
      '18703077000355',
      '33331397000153',
      '05437235000169',
      '05437235000592',
      '19328221000111',
      '29250018000123',
      '22159368000130',
      '61069373003471',
      '61069373002157',
      '61069373004524',
      '61069373002408',
      '61069373002904',
      '61069373002823',
      '61069373003714',
      '61069373002319',
      '61069373004109',
      '61069373003552',
      '61069373001932',
      '61069373005091',
      '61069373004796',
      '61069373004877',
      '61069373000707',
      '61069373001509',
      '61069373001690',
      '61069373004362',
      '61069373001266',
      '61069373004281',
      '61069373001347',
      '61069373003048',
      '61069373000880',
      '61069373000103',
      '49623929000409',
      '49623929000166',
      '49623929000670',
      '24147326000104',
      '61069373004958',
      '12399157000110',
      '05283552000178',
      '09007432000107',
      '31119213000160',
      '11280978000170',
      '23699403000176',
      '61069373004958',
      '05652267000187',
      '05652267000268',
      '10497186000190',
      '02161416000117',
      '16586047000119',
      '11616444000172',
      '09007432000280',
      '04106379000170',
      '23789790000131',
      '04740760000196',
      '04740760000277'
    ]

    return this.find(
      {
        $or: [
          {
            document_number: {
              $in: associatesDocumentNumbers.concat(partnersDocumentNumbers)
            }
          },
          {
            'company_metadata.send_conciliation_email': true
          }
        ]
      },
      {
        _id: 1
      }
    )
  }

  getCompanyContact(id) {
    return this.findById(id, {
      'contact.email': 1,
      'company_metadata.sap_code': 1,
      name: 1
    })
  }
}
